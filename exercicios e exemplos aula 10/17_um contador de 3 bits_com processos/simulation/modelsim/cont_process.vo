// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "05/02/2023 20:28:17"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module cont_process (
	d,
	clear,
	clock,
	load,
	q);
input 	[2:0] d;
input 	clear;
input 	clock;
input 	load;
output 	[2:0] q;

// Design Ports Information
// q[0]	=>  Location: PIN_N6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// q[1]	=>  Location: PIN_M4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// q[2]	=>  Location: PIN_L4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// d[0]	=>  Location: PIN_A6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clock	=>  Location: PIN_J7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// clear	=>  Location: PIN_J6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// load	=>  Location: PIN_N4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// d[1]	=>  Location: PIN_A8,	 I/O Standard: 2.5 V,	 Current Strength: Default
// d[2]	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \q[0]~output_o ;
wire \q[1]~output_o ;
wire \q[2]~output_o ;
wire \clock~input_o ;
wire \clock~inputclkctrl_outclk ;
wire \d[0]~input_o ;
wire \q_temp[0]~feeder_combout ;
wire \clear~input_o ;
wire \clear~inputclkctrl_outclk ;
wire \load~input_o ;
wire \d[1]~input_o ;
wire \q_temp[1]~feeder_combout ;
wire \d[2]~input_o ;
wire \q~0_combout ;
wire [2:0] q_temp;


// Location: IOOBUF_X12_Y0_N2
cycloneiv_io_obuf \q[0]~output (
	.i(q_temp[0]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \q[0]~output .bus_hold = "false";
defparam \q[0]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X8_Y0_N2
cycloneiv_io_obuf \q[1]~output (
	.i(q_temp[1]),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \q[1]~output .bus_hold = "false";
defparam \q[1]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X8_Y0_N9
cycloneiv_io_obuf \q[2]~output (
	.i(\q~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\q[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \q[2]~output .bus_hold = "false";
defparam \q[2]~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X16_Y0_N15
cycloneiv_io_ibuf \clock~input (
	.i(clock),
	.ibar(gnd),
	.o(\clock~input_o ));
// synopsys translate_off
defparam \clock~input .bus_hold = "false";
defparam \clock~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G17
cycloneiv_clkctrl \clock~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clock~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clock~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clock~inputclkctrl .clock_type = "global clock";
defparam \clock~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X10_Y31_N1
cycloneiv_io_ibuf \d[0]~input (
	.i(d[0]),
	.ibar(gnd),
	.o(\d[0]~input_o ));
// synopsys translate_off
defparam \d[0]~input .bus_hold = "false";
defparam \d[0]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X9_Y1_N16
cycloneiv_lcell_comb \q_temp[0]~feeder (
// Equation(s):
// \q_temp[0]~feeder_combout  = \d[0]~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\d[0]~input_o ),
	.cin(gnd),
	.combout(\q_temp[0]~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \q_temp[0]~feeder .lut_mask = 16'hFF00;
defparam \q_temp[0]~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X16_Y0_N22
cycloneiv_io_ibuf \clear~input (
	.i(clear),
	.ibar(gnd),
	.o(\clear~input_o ));
// synopsys translate_off
defparam \clear~input .bus_hold = "false";
defparam \clear~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G19
cycloneiv_clkctrl \clear~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\clear~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\clear~inputclkctrl_outclk ));
// synopsys translate_off
defparam \clear~inputclkctrl .clock_type = "global clock";
defparam \clear~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOIBUF_X10_Y0_N8
cycloneiv_io_ibuf \load~input (
	.i(load),
	.ibar(gnd),
	.o(\load~input_o ));
// synopsys translate_off
defparam \load~input .bus_hold = "false";
defparam \load~input .simulate_z_as = "z";
// synopsys translate_on

// Location: FF_X9_Y1_N17
dffeas \q_temp[0] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\q_temp[0]~feeder_combout ),
	.asdata(vcc),
	.clrn(!\clear~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\load~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(q_temp[0]),
	.prn(vcc));
// synopsys translate_off
defparam \q_temp[0] .is_wysiwyg = "true";
defparam \q_temp[0] .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X12_Y31_N8
cycloneiv_io_ibuf \d[1]~input (
	.i(d[1]),
	.ibar(gnd),
	.o(\d[1]~input_o ));
// synopsys translate_off
defparam \d[1]~input .bus_hold = "false";
defparam \d[1]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X9_Y1_N10
cycloneiv_lcell_comb \q_temp[1]~feeder (
// Equation(s):
// \q_temp[1]~feeder_combout  = \d[1]~input_o 

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(\d[1]~input_o ),
	.cin(gnd),
	.combout(\q_temp[1]~feeder_combout ),
	.cout());
// synopsys translate_off
defparam \q_temp[1]~feeder .lut_mask = 16'hFF00;
defparam \q_temp[1]~feeder .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X9_Y1_N11
dffeas \q_temp[1] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(\q_temp[1]~feeder_combout ),
	.asdata(vcc),
	.clrn(!\clear~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\load~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(q_temp[1]),
	.prn(vcc));
// synopsys translate_off
defparam \q_temp[1] .is_wysiwyg = "true";
defparam \q_temp[1] .power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X12_Y0_N8
cycloneiv_io_ibuf \d[2]~input (
	.i(d[2]),
	.ibar(gnd),
	.o(\d[2]~input_o ));
// synopsys translate_off
defparam \d[2]~input .bus_hold = "false";
defparam \d[2]~input .simulate_z_as = "z";
// synopsys translate_on

// Location: FF_X9_Y1_N13
dffeas \q_temp[2] (
	.clk(\clock~inputclkctrl_outclk ),
	.d(gnd),
	.asdata(\d[2]~input_o ),
	.clrn(!\clear~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\load~input_o ),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(q_temp[2]),
	.prn(vcc));
// synopsys translate_off
defparam \q_temp[2] .is_wysiwyg = "true";
defparam \q_temp[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X9_Y1_N12
cycloneiv_lcell_comb \q~0 (
// Equation(s):
// \q~0_combout  = (q_temp[2] & q_temp[1])

	.dataa(gnd),
	.datab(gnd),
	.datac(q_temp[2]),
	.datad(q_temp[1]),
	.cin(gnd),
	.combout(\q~0_combout ),
	.cout());
// synopsys translate_off
defparam \q~0 .lut_mask = 16'hF000;
defparam \q~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign q[0] = \q[0]~output_o ;

assign q[1] = \q[1]~output_o ;

assign q[2] = \q[2]~output_o ;

endmodule
